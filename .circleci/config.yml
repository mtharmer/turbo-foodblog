# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build:
    working_directory: ~/turbo-foodblog
    docker:
      - image: circleci/ruby:3.0
        environment:
          RAILS_ENV: test
          TURBO_FOODBLOG_DATABASE_PASSWORD: ""
      - image: postgres:13.11
        environment:
          POSTGRES_USER: turbo_fooblog
          POSTGRES_DB: turbo_foodblog_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout
      - run:
          name: Which bundler?
          command: bundle -v
      # Restore Cached Dependencies
      - restore_cache:
          name: Restore bundle cache
          key: turbo-foodblog-{{ checksum "Gemfile.lock" }}

      - run:
          name: Bundle Install
          command: bundle check --path vendor/bundle || bundle install --deployment

      # Bundle install dependencies
      - run: bundle install --path vendor/bundle

      # Cache Dependencies
      - save_cache:
          name: Store bundle cache
          key: turbo-foodblog-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Wait for DB
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: bundle exec rails db:schema:load --trace
      - run: bundle exec rspec

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  test-workflow:
    jobs:
      - build
